{
  "openapi": "3.0.4",
  "info": {
    "title": "EVE Abacus API",
    "description": "API for EVE Online manufacturing and production calculations",
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "paths": {
    "/api/Abacus/ManufBatch": {
      "post": {
        "tags": [
          "Abacus"
        ],
        "summary": "Calculates a complete manufacturing batch analysis including Bill of Materials, Production Routing, and Market Analysis",
        "description": "Processes blueprint manufacturing orders and returns detailed analysis including materials, costs, and market data.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ManufacturingBatchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManufacturingBatchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ManufacturingBatchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ManufacturingBatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ManufBatch"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManufBatch"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManufBatch"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Abacus/test": {
      "post": {
        "tags": [
          "Abacus"
        ],
        "summary": "Test endpoint for Swagger schema",
        "description": "Simple test endpoint to verify that Swagger can generate schemas correctly.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TestRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Abacus/InventionSuggestion": {
      "post": {
        "tags": [
          "Abacus"
        ],
        "summary": "Returns a list of blueprints suitable for invention based on character's R&D skills",
        "description": "Analyzes the provided R&D skill IDs and returns a list of blueprints that can be used for invention with those skills.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "skillIds",
            "in": "query",
            "description": "Array of EVE Online R&D skill IDs. Common skills include:\n- 3408: Science\n- 3409: Advanced Industry\n- 11433: High Energy Physics\n- 11442: Molecular Engineering\n- 11443: Nanite Engineering",
            "required": true,
            "schema": {
              "minItems": 1,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "3408",
              "3409"
            ]
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Abacus/PIPlanner": {
      "post": {
        "tags": [
          "Abacus"
        ],
        "summary": "Finds planets suitable for Planetary Interaction (PI)",
        "description": "Returns a list of planets within the specified range of a focal system, with optional filtering by security status and planet type.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "focalSystemName",
            "in": "query",
            "description": "Name of the EVE Online solar system to use as the center point",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Jita"
          },
          {
            "name": "range",
            "in": "query",
            "description": "Number of jumps from the focal system to search (1-10)",
            "required": true,
            "schema": {
              "maximum": 10,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "example": 5
          },
          {
            "name": "securityStatus",
            "in": "query",
            "description": "Array of security status filters (e.g., ['highsec', 'lowsec', 'nullsec'])",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "highsec",
              "nullsec"
            ]
          },
          {
            "name": "planetTypes",
            "in": "query",
            "description": "Array of planet types to filter by (e.g., ['Barren', 'Gas', 'Ice', 'Lava', 'Oceanic', 'Plasma', 'Storm', 'Temperate'])\nAvailable planet types:\n- Barren\n- Gas\n- Ice\n- Lava\n- Oceanic\n- Plasma\n- Storm\n- Temperate",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "Barren",
              "Oceanic"
            ]
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Denormalize"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Denormalize"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Denormalize"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Calculator/manufacturing-batch": {
      "post": {
        "tags": [
          "Calculator"
        ],
        "summary": "Calculates a complete manufacturing batch analysis including Bill of Materials, Production Routing, and Market Analysis",
        "description": "Processes blueprint manufacturing orders and returns detailed analysis including materials, costs, and market data.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ManufacturingBatchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManufacturingBatchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ManufacturingBatchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ManufacturingBatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ManufBatch"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManufBatch"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManufBatch"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Calculator/search-blueprints": {
      "get": {
        "tags": [
          "Calculator"
        ],
        "summary": "Searches for blueprints by name",
        "description": "Performs a search across all blueprints and returns matching names for autocomplete functionality. Used for blueprint selection in manufacturing orders.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "description": "Search term for blueprint names (minimum 2 characters recommended)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Calculator/blueprint-type-id": {
      "get": {
        "tags": [
          "Calculator"
        ],
        "summary": "Gets the blueprint TypeID by its exact name",
        "description": "Retrieves the TypeID of a blueprint using its exact name. Used for validation when a user selects a blueprint from the autocomplete list.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "blueprintName",
            "in": "query",
            "description": "Exact name of the blueprint (case-sensitive)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Calculator/product-type-id": {
      "get": {
        "tags": [
          "Calculator"
        ],
        "summary": "Gets the product TypeID that a blueprint produces",
        "description": "Retrieves the TypeID of the product manufactured by a blueprint for the specified activity. Used to determine what item will be produced.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "blueprintTypeId",
            "in": "query",
            "description": "TypeID of the blueprint",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "activityId",
            "in": "query",
            "description": "Activity ID (1 = Manufacturing, 8 = Invention, etc.)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Calculator/validate-blueprint": {
      "get": {
        "tags": [
          "Calculator"
        ],
        "summary": "Validates a blueprint name and returns blueprint and product TypeIDs",
        "description": "Combines blueprint validation and product lookup in a single call. Returns both the blueprint TypeID and the product TypeID for the specified activity.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "blueprintName",
            "in": "query",
            "description": "Exact name of the blueprint (case-sensitive)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activityId",
            "in": "query",
            "description": "Activity ID (1 = Manufacturing, 8 = Invention, etc.)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Calculator/market-hubs": {
      "get": {
        "tags": [
          "Calculator"
        ],
        "summary": "Gets a list of available market hub names",
        "description": "Returns a list of market hub station names that can be used for market analysis and price calculations.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/Calculator/invention-skills": {
      "get": {
        "tags": [
          "Calculator"
        ],
        "summary": "Gets a list of invention skills",
        "description": "Returns a list of R&D skills that can be used for blueprint invention calculations.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/Calculator/invention-suggestions": {
      "post": {
        "tags": [
          "Calculator"
        ],
        "summary": "Gets invention suggestions based on skills",
        "description": "Analyzes the provided invention skill names and returns a list of blueprints suitable for invention with those skills. Requires at least 3 skills to be provided.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Performs a basic health check of the API service",
        "description": "Returns the current status of the API service including version and timestamp.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Health/db": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Performs a database connectivity health check",
        "description": "Tests the connection to the database and returns the status.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseHealthResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseHealthResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseHealthResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseHealthResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseHealthResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseHealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Map/SearchSolarSystems": {
      "get": {
        "tags": [
          "Map"
        ],
        "summary": "Searches for EVE Online solar system names",
        "description": "Returns a list of solar system names matching the search term for autocomplete functionality. If no search term is provided, returns all system names.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "description": "Optional search term for solar system names",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Map/PlanetTypes": {
      "get": {
        "tags": [
          "Map"
        ],
        "summary": "Gets the available planet types",
        "description": "Returns a list of all planet types that can be used for filtering planetary search results.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Map/Planets": {
      "post": {
        "tags": [
          "Map"
        ],
        "summary": "Gets planets based on filters",
        "description": "Returns a paginated list of planets matching the specified criteria for Planetary Interaction planning.\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PIPlannerRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PIPlannerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PIPlannerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PIPlannerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlanetDTOPaginatedResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanetDTOPaginatedResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanetDTOPaginatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SDE/blueprintProdOfInvention": {
      "get": {
        "tags": [
          "SDE"
        ],
        "summary": "Checks if a blueprint's product can be invented",
        "description": "Determines whether the specified blueprint can be obtained through invention\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "TypeID of the blueprint to check",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SDE/itemName": {
      "get": {
        "tags": [
          "SDE"
        ],
        "summary": "Gets the name of an item by its TypeID",
        "description": "Retrieves the full name of an EVE Online item using its TypeID\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "TypeID of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SDE/itemId": {
      "get": {
        "tags": [
          "SDE"
        ],
        "summary": "Gets the TypeID of an item by its exact name",
        "description": "Retrieves the TypeID of an EVE Online item using its exact name (case-sensitive)\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Exact name of the item (case-sensitive)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SDE/bpIdByProdId": {
      "get": {
        "tags": [
          "SDE"
        ],
        "summary": "Gets the blueprint TypeID that produces a specific item",
        "description": "Finds the blueprint that can manufacture the specified product\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "TypeID of the product",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SDE/prodIdByBpId": {
      "get": {
        "tags": [
          "SDE"
        ],
        "summary": "Gets the product TypeID that a blueprint produces",
        "description": "Finds the product that is manufactured by the specified blueprint\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "TypeID of the blueprint",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "activityId",
            "in": "query",
            "description": "Activity ID (1 = Manufacturing, default)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SDE/item/{id}": {
      "get": {
        "tags": [
          "SDE"
        ],
        "summary": "Gets detailed information about an item by its TypeID",
        "description": "Retrieves complete item information from the EVE Online SDE\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TypeID of the item",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SDE/bp/{id}": {
      "get": {
        "tags": [
          "SDE"
        ],
        "summary": "Gets detailed information about a blueprint by its TypeID",
        "description": "Retrieves complete blueprint information from the EVE Online SDE\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TypeID of the blueprint",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "activityId",
            "in": "query",
            "description": "Activity ID (1 = Manufacturing, 8 = Invention)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Blueprint"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Blueprint"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Blueprint"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SDE/bp/{id}/materials": {
      "get": {
        "tags": [
          "SDE"
        ],
        "summary": "Gets the material requirements for a blueprint",
        "description": "Retrieves the list of materials needed for manufacturing or other activities with this blueprint\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TypeID of the blueprint",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "activityId",
            "in": "query",
            "description": "Activity ID (1 = Manufacturing, 8 = Invention)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BPSkill"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BPSkill"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BPSkill"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SDE/bp/{id}/products": {
      "get": {
        "tags": [
          "SDE"
        ],
        "summary": "Gets the products produced by a blueprint",
        "description": "Retrieves the list of items produced by this blueprint for the specified activity\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TypeID of the blueprint",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "activityId",
            "in": "query",
            "description": "Activity ID (1 = Manufacturing, 8 = Invention)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BPSkill"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BPSkill"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BPSkill"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SDE/bp/{id}/skills": {
      "get": {
        "tags": [
          "SDE"
        ],
        "summary": "Gets the skill requirements for a blueprint",
        "description": "Retrieves the list of skills needed to use this blueprint for the specified activity\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TypeID of the blueprint",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "activityId",
            "in": "query",
            "description": "Activity ID (1 = Manufacturing, 8 = Invention)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BPSkill"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BPSkill"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BPSkill"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SDE/bpexists/{id}": {
      "get": {
        "tags": [
          "SDE"
        ],
        "summary": "Checks if a blueprint exists in the SDE",
        "description": "Verifies whether a blueprint with the specified TypeID exists in the EVE Online Static Data Export\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TypeID of the blueprint to check",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SDE/itemexists/{id}": {
      "get": {
        "tags": [
          "SDE"
        ],
        "summary": "Checks if an item exists in the SDE",
        "description": "Verifies whether an item with the specified TypeID exists in the EVE Online Static Data Export\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TypeID of the item to check",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SDE/bpSearch": {
      "post": {
        "tags": [
          "SDE"
        ],
        "summary": "Searches for blueprints by name",
        "description": "Performs a search across all blueprints and returns matching names for autocomplete functionality\n\n**Rate Limiting:**\n- 20 requests per second\n- 100 requests per minute\n- 1000 requests per hour",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Search term for blueprint names",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "api-supported-versions": {
                "description": "The API versions supported by this endpoint",
                "schema": {
                  "type": "string"
                }
              },
              "content-type": {
                "description": "The content type of the response",
                "schema": {
                  "type": "string"
                }
              },
              "date": {
                "description": "The date and time when the response was generated",
                "schema": {
                  "type": "string"
                }
              },
              "server": {
                "description": "The server software used to handle the request",
                "schema": {
                  "type": "string"
                }
              },
              "transfer-encoding": {
                "description": "The encoding used to transfer the response",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BOMLineItem": {
        "required": [
          "item"
        ],
        "type": "object",
        "properties": {
          "typeId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "requisitioned": {
            "type": "integer",
            "format": "int32"
          },
          "item": {
            "$ref": "#/components/schemas/Item"
          },
          "marketHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketRegionHistory"
            },
            "nullable": true
          },
          "purchaseRequisitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseRequisition"
            },
            "nullable": true
          },
          "marketStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketStat"
            },
            "nullable": true
          },
          "lowestSellPrice": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "sellStation": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "lowestBuyPrice": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "buyStation": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BPMaterial": {
        "type": "object",
        "properties": {
          "blueprintTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "activityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "materialTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BPProduct": {
        "type": "object",
        "properties": {
          "blueprintTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "activityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "probability": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BPSkill": {
        "type": "object",
        "properties": {
          "blueprintTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "activityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "skillId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BPTime": {
        "type": "object",
        "properties": {
          "blueprintTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "activityId": {
            "type": "integer",
            "format": "int32"
          },
          "time": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Blueprint": {
        "type": "object",
        "properties": {
          "blueprintTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "maxProductionLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "itemProperty": {
            "$ref": "#/components/schemas/Item"
          },
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "nullable": true
          },
          "bpSkills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BPSkill"
            },
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "nullable": true
          },
          "bpProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BPProduct"
            },
            "nullable": true
          },
          "materials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "nullable": true
          },
          "bpMaterials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BPMaterial"
            },
            "nullable": true
          },
          "bpTimes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BPTime"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Category": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "published": {
            "type": "boolean",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Constellation": {
        "type": "object",
        "properties": {
          "constellationId": {
            "type": "integer",
            "format": "int32"
          },
          "constellationName": {
            "type": "string",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "x": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "y": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "z": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "x_Min": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "x_Max": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "y_Min": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "y_Max": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "z_Min": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "z_Max": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "radius": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "factionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DatabaseHealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "database": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "responseTime": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response model for database health check"
      },
      "Denormalize": {
        "required": [
          "constellation",
          "item",
          "name",
          "region",
          "solarSystem"
        ],
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "typeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "item": {
            "$ref": "#/components/schemas/Item"
          },
          "solarSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "solarSystem": {
            "$ref": "#/components/schemas/SolarSystem"
          },
          "constellationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "constellation": {
            "$ref": "#/components/schemas/Constellation"
          },
          "regionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "region": {
            "$ref": "#/components/schemas/Region"
          },
          "orbitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "x": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "y": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "z": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "radius": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "nameId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "security": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "celestialIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orbitIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "minLinkPowerGrid": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "minLinkCPU": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Group": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "useBasePrice": {
            "type": "boolean",
            "nullable": true
          },
          "anchored": {
            "type": "boolean",
            "nullable": true
          },
          "anchorable": {
            "type": "boolean",
            "nullable": true
          },
          "fittableNonSingleton": {
            "type": "boolean",
            "nullable": true
          },
          "published": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "service": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response model for basic health check"
      },
      "Item": {
        "type": "object",
        "properties": {
          "typeId": {
            "type": "integer",
            "format": "int32"
          },
          "published": {
            "type": "boolean",
            "nullable": true
          },
          "typeName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          },
          "marketGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "graphicId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "radius": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "soundId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "factionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "raceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sofFactionName": {
            "type": "string",
            "nullable": true
          },
          "sofMaterialSetId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "metaGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "variationparentTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mass": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "volume": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "packagedVolume": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "capacity": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "portionSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "basePrice": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "blueprints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Blueprint"
            },
            "nullable": true
          },
          "bpSkills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BPSkill"
            },
            "nullable": true
          },
          "bpProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BPProduct"
            },
            "nullable": true
          },
          "bpMaterials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BPMaterial"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ManufBatch": {
        "type": "object",
        "properties": {
          "productionRouting": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductionRoute"
            },
            "nullable": true
          },
          "productionRoutingString": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "billOfMaterials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BOMLineItem"
            },
            "nullable": true
          },
          "billOfMaterialsString": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "stationBillOfMaterials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StationBillOfMaterials"
            },
            "nullable": true
          },
          "purchaseOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseRequisition"
            },
            "nullable": true
          },
          "marketProfile": {
            "$ref": "#/components/schemas/MarketProfile"
          },
          "supplyPlan": {
            "$ref": "#/components/schemas/SupplyPlan"
          }
        },
        "additionalProperties": false
      },
      "ManufacturingBatchRequest": {
        "type": "object",
        "properties": {
          "orderDTOs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDTO"
            },
            "nullable": true
          },
          "stationIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarketOrder": {
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "isBuyOrder": {
            "type": "boolean"
          },
          "issued": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int64"
          },
          "station": {
            "$ref": "#/components/schemas/Station"
          },
          "minVolume": {
            "type": "integer",
            "format": "int32"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "range": {
            "type": "string",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "systemId": {
            "type": "integer",
            "format": "int32"
          },
          "typeId": {
            "type": "integer",
            "format": "int32"
          },
          "typeName": {
            "type": "string",
            "nullable": true
          },
          "volumeRemain": {
            "type": "integer",
            "format": "int32"
          },
          "volumeTotal": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MarketProfile": {
        "type": "object",
        "properties": {
          "materialCost": {
            "type": "number",
            "format": "double"
          },
          "revenueSellOrder": {
            "type": "number",
            "format": "double"
          },
          "revenueBuyOrder": {
            "type": "number",
            "format": "double"
          },
          "profitSellOrder": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "profitBuyOrder": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MarketRegionHistory": {
        "type": "object",
        "properties": {
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "typeId": {
            "type": "integer",
            "format": "int32"
          },
          "average": {
            "type": "number",
            "format": "double"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "highest": {
            "type": "number",
            "format": "double"
          },
          "lowest": {
            "type": "number",
            "format": "double"
          },
          "orderCount": {
            "type": "integer",
            "format": "int64"
          },
          "volume": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "MarketStat": {
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "typeId": {
            "type": "integer",
            "format": "int32"
          },
          "stationId": {
            "type": "integer",
            "format": "int64"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "stationName": {
            "type": "string",
            "nullable": true
          },
          "averageSellPrice": {
            "type": "number",
            "format": "double"
          },
          "sellVolume": {
            "type": "integer",
            "format": "int64"
          },
          "averageBuyPrice": {
            "type": "number",
            "format": "double"
          },
          "buyVolume": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Name": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "format": "int64"
          },
          "itemName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Order": {
        "required": [
          "blueprintName",
          "product",
          "productName"
        ],
        "type": "object",
        "properties": {
          "blueprintTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "activityId": {
            "type": "integer",
            "format": "int32"
          },
          "productTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/Item"
          },
          "blueprintName": {
            "type": "string",
            "nullable": true
          },
          "copies": {
            "type": "integer",
            "format": "int32"
          },
          "runs": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "me": {
            "type": "integer",
            "format": "int32"
          },
          "te": {
            "type": "integer",
            "format": "int32"
          },
          "parentBlueprintTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderDTO": {
        "type": "object",
        "properties": {
          "blueprintName": {
            "type": "string",
            "nullable": true
          },
          "activityId": {
            "type": "integer",
            "format": "int32"
          },
          "copies": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "runs": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "me": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "te": {
            "maximum": 20,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "parentBlueprintTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PIPlannerRequest": {
        "type": "object",
        "properties": {
          "focalSystemName": {
            "type": "string",
            "nullable": true
          },
          "range": {
            "type": "integer",
            "format": "int32"
          },
          "securityStatus": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "planetTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PlanetDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "solarSystem": {
            "type": "string",
            "nullable": true
          },
          "constellation": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "planetType": {
            "type": "string",
            "nullable": true
          },
          "security": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "radius": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "minLinkPowerGrid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "minLinkCPU": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PlanetDTOPaginatedResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanetDTO"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProcurementPlan": {
        "type": "object",
        "properties": {
          "stationId": {
            "type": "integer",
            "format": "int64"
          },
          "stationName": {
            "type": "string",
            "nullable": true
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "purchaseRequisitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseRequisition"
            },
            "nullable": true
          },
          "totalVolume": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "marketImport": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "estimatedCost": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ProductionRoute": {
        "required": [
          "order",
          "producedPerRun"
        ],
        "type": "object",
        "properties": {
          "materialTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "materialName": {
            "type": "string",
            "nullable": true
          },
          "blueprintTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "blueprintName": {
            "type": "string",
            "nullable": true
          },
          "requisitioned": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            },
            "nullable": true
          },
          "producedPerRun": {
            "type": "integer",
            "format": "int32"
          },
          "produced": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "inventory": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "averageSellPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "averageBuyPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "blueprintMetaData": {
            "$ref": "#/components/schemas/Item"
          },
          "materialMetaData": {
            "$ref": "#/components/schemas/Item"
          },
          "materialMarketHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketRegionHistory"
            },
            "nullable": true
          },
          "marketStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketStat"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PurchaseRequisition": {
        "required": [
          "item"
        ],
        "type": "object",
        "properties": {
          "stationId": {
            "type": "integer",
            "format": "int64"
          },
          "station": {
            "$ref": "#/components/schemas/Station"
          },
          "typeId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "marketOrder": {
            "$ref": "#/components/schemas/MarketOrder"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "item": {
            "$ref": "#/components/schemas/Item"
          }
        },
        "additionalProperties": false
      },
      "Region": {
        "type": "object",
        "properties": {
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "regionName": {
            "type": "string",
            "nullable": true
          },
          "x": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "y": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "z": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "x_Min": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "x_Max": {
            "type": "number",
            "format": "float"
          },
          "y_Min": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "y_Max": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "z_Min": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "z_Max": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "factionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nameId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "descriptionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SolarSystem": {
        "type": "object",
        "properties": {
          "solarSystemId": {
            "type": "integer",
            "format": "int32"
          },
          "solarSystemName": {
            "type": "string",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "constellationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "x": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "y": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "z": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "x_Min": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "x_Max": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "y_Min": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "y_Max": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "z_Min": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "z_Max": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "luminosity": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "border": {
            "type": "boolean",
            "nullable": true
          },
          "corridor": {
            "type": "boolean",
            "nullable": true
          },
          "fringe": {
            "type": "boolean",
            "nullable": true
          },
          "hub": {
            "type": "boolean",
            "nullable": true
          },
          "international": {
            "type": "boolean",
            "nullable": true
          },
          "regional": {
            "type": "boolean",
            "nullable": true
          },
          "security": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "factionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "radius": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "sunTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "securityClass": {
            "type": "string",
            "nullable": true
          },
          "solarSystemNameId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "visualEffect": {
            "type": "string",
            "nullable": true
          },
          "descriptionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jumpDistance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Station": {
        "type": "object",
        "properties": {
          "stationId": {
            "type": "integer",
            "format": "int32"
          },
          "security": {
            "type": "number",
            "format": "float"
          },
          "dockingCostPerVolume": {
            "type": "number",
            "format": "float"
          },
          "maxShipVolumeDockable": {
            "type": "number",
            "format": "float"
          },
          "officeRentalCost": {
            "type": "integer",
            "format": "int32"
          },
          "operationId": {
            "type": "integer",
            "format": "int32"
          },
          "stationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "corporationId": {
            "type": "integer",
            "format": "int32"
          },
          "solarSystemId": {
            "type": "integer",
            "format": "int32"
          },
          "solarSystem": {
            "$ref": "#/components/schemas/SolarSystem"
          },
          "constellationId": {
            "type": "integer",
            "format": "int32"
          },
          "regionId": {
            "type": "integer",
            "format": "int32"
          },
          "stationName": {
            "type": "string",
            "nullable": true
          },
          "x": {
            "type": "number",
            "format": "float"
          },
          "y": {
            "type": "number",
            "format": "float"
          },
          "z": {
            "type": "number",
            "format": "float"
          },
          "reprocessingEfficiency": {
            "type": "number",
            "format": "float"
          },
          "reprocessingStationsTake": {
            "type": "number",
            "format": "float"
          },
          "reprocessingHangarFlag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StationBillOfMaterials": {
        "required": [
          "station"
        ],
        "type": "object",
        "properties": {
          "stationId": {
            "type": "integer",
            "format": "int64"
          },
          "station": {
            "$ref": "#/components/schemas/Station"
          },
          "purchaseRequisitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseRequisition"
            },
            "nullable": true
          },
          "importStrings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SupplyPlan": {
        "type": "object",
        "properties": {
          "procurementPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcurementPlan"
            },
            "nullable": true
          },
          "estimatedTotalCost": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalVolume": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TestRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name to test",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "description": "The count to test",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Simple test request model"
      },
      "ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    }
  },
  "tags": [
    {
      "name": "Abacus",
      "description": "Controller for EVE Online manufacturing and production calculations"
    },
    {
      "name": "Calculator",
      "description": "Controller for EVE Online manufacturing calculator operations"
    },
    {
      "name": "Health",
      "description": "Controller for health check and system status endpoints"
    },
    {
      "name": "Map",
      "description": "Controller for EVE Online map and planetary search endpoints"
    },
    {
      "name": "SDE",
      "description": "Controller for accessing EVE Online Static Data Export (SDE) information"
    }
  ]
}