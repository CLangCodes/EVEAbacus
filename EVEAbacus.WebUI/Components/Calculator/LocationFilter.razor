<MudSelect T="string" Label="Market Hubs" MultiSelection="true" @bind-Value="_value" @bind-SelectedValues="SelectedMarkets">
    @foreach (var hub in MarketHubs)
    {
        <MudSelectItem T="string" Value="@hub"></MudSelectItem>
    }
</MudSelect>

@code {
    [CascadingParameter] required public CalculatorService CalculatorService { get; set; }
    [Parameter] public EventCallback OnValidEvent { get; set; }
    bool _hasInitialized = false;

    public string[] MarketHubs = [];
    public IEnumerable<string> SelectedMarkets
    {
        get => CalculatorService.SelectedMarkets;
        set
        {
            Debug.WriteLine($"SelectedMarketsTriggered");
            if (!CalculatorService.SelectedMarkets.SequenceEqual(value))
            {
                Debug.WriteLine($"SelectedMarkets is not the same anymore.");
                CalculatorService.SelectedMarkets = value.ToArray();
                OnValidEvent.InvokeAsync();
            }
        }
    }
    string _value = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_hasInitialized)
        {
            _hasInitialized = true;
            MarketHubs = await CalculatorService.GetMarketHubStringArrayAsync();
        }
    }
}
